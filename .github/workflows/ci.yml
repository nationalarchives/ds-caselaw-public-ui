name: CI
permissions: {}

on:
  pull_request:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

  merge_group:

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.14"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt
      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        env:
          SKIP: no-commit-to-branch,stylelint

  build-scss:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0

      - name: Install node dependencies
        run: npm ci

      - name: Build scss
        run: npm run build

  js-tests:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0

      - name: Install node dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build-django:
    needs: linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Copy .env.example file
        uses: canastro/copy-file-action@ae66602ce7d214dbd2e298c1db67a81388755a0a
        with:
          source: ".env.example"
          target: ".env"

      - name: Build the Stack
        uses: docker/bake-action@3acf805d94d93a86cce4ca44798a76464a75b88c # v6.9.0
        with:
          targets: django
          load: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.tags=ds_judgments_public_ui_django:latest
            *.output=type=docker,dest=/tmp/django-image.tar

      - name: Upload Django image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: django-image
          path: /tmp/django-image.tar

  download-postgres:
    needs: linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Set up Docker
        uses: docker/setup-docker-action@3fb92d6d9c634363128c8cce4bc3b2826526370a # v4.4.0
        with:
          version: v28.2.2

      - name: Copy .env.example file
        uses: canastro/copy-file-action@ae66602ce7d214dbd2e298c1db67a81388755a0a
        with:
          source: ".env.example"
          target: ".env"

      - name: Download Postgres image
        run: docker compose pull postgres

      - name: Save Postgres image
        run: docker save -o /tmp/postgres-image.tar postgres

      - name: Upload Postgres image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: postgres-image
          path: /tmp/postgres-image.tar

  static-analysis:
    needs:
      - build-django
      - download-postgres
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Copy .env.example file
        uses: canastro/copy-file-action@ae66602ce7d214dbd2e298c1db67a81388755a0a
        with:
          source: ".env.example"
          target: ".env"

      - name: Download Django image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: django-image
          path: /tmp

      - name: Download Postgres image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: postgres-image
          path: /tmp

      - name: Load Django image
        run: docker load --input /tmp/django-image.tar

      - name: Load Postgres image
        run: docker load --input /tmp/postgres-image.tar

      - name: Create docker network as used in dev
        run: docker network create caselaw

      - name: Run mypy
        run: docker compose run django mypy ds_judgements_public_ui judgments

  pytest:
    needs:
      - build-django
      - download-postgres
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Copy .env.example file
        uses: canastro/copy-file-action@ae66602ce7d214dbd2e298c1db67a81388755a0a
        with:
          source: ".env.example"
          target: ".env"

      - name: Create docker network as used in dev
        run: docker network create caselaw

      - name: Download Django image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: django-image
          path: /tmp

      - name: Download Postgres image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: postgres-image
          path: /tmp

      - name: Load Django image
        run: docker load --input /tmp/django-image.tar

      - name: Load Postgres image
        run: docker load --input /tmp/postgres-image.tar

      - name: Run DB Migrations
        run: docker compose run --rm django python manage.py migrate --settings=config.settings.test

      - name: Run Django Tests with coverage
        run: docker compose run django pytest --cov --cov-branch --cov-report=xml -vvvv -rsa -m "not local"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Tear down the Stack
        run: docker compose down

  e2e-tests:
    env:
      DJANGO_SETTINGS_MODULE: local

    needs:
      - build-scss
      - js-tests
      - build-django
      - download-postgres
      - pytest
      - static-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          persist-credentials: false

      - name: Copy .env.example file
        uses: canastro/copy-file-action@ae66602ce7d214dbd2e298c1db67a81388755a0a
        with:
          source: ".env.example"
          target: ".env"

      - name: Create docker network as used in dev
        run: docker network create caselaw

      - name: Download Django image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: django-image
          path: /tmp

      - name: Download Postgres image
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: postgres-image
          path: /tmp

      - name: Load Django image
        run: docker load --input /tmp/django-image.tar

      - name: Load Postgres image
        run: docker load --input /tmp/postgres-image.tar

      - name: Checkout Marklogic repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          repository: "nationalarchives/ds-caselaw-marklogic"
          path: "./marklogic"
          persist-credentials: false

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6

      - name: Install requests
        run: "pip install requests"

      - name: Run marklogic docker container
        run: docker compose up -d --wait
        working-directory: "./marklogic"

      - name: Deploy marklogic configuration
        run: gradle mlDeploy
        working-directory: "./marklogic"

      - name: Populate marklogic DB with test data
        run: python ./development_scripts/populate_from_caselaw.py
        working-directory: "./marklogic"

      - name: Run DB Migrations
        run: docker compose run --rm django python manage.py migrate --settings=config.settings.test

      - name: Setup django server for e2e tests
        run: docker compose up -d django

      - name: Install NPM deps
        run: npm install

      - name: Build the JS and SASS
        run: npm run build

      - name: Update court dates
        run: docker compose run --rm django python manage.py recalculate_court_dates

      - name: Kick off the django server itself
        run: docker compose exec -d django python manage.py runserver 0.0.0.0:3000

      - name: Build playwright runner container
        run: docker compose up -d e2e_tests

      - name: Run playwright e2e tests
        run: docker compose exec e2e_tests pytest --base-url http://django:3000 --tracing retain-on-failure

      - name: Copy trace files from container
        if: ${{ always() }}
        run: docker compose cp e2e_tests:/app/test-results artifacts
        continue-on-error: true

      - name: Upload trace files as github artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: ${{ always() }}
        with:
          name: playwright-report
          path: artifacts
          retention-days: 7

      - name: Upload snapshots as GitHub artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: failure()
        with:
          name: playwright-snapshots
          path: e2e_tests/snapshots
          retention-days: 7

      - name: Tear down marklogic
        run: docker compose down
        working-directory: "./marklogic"

      - name: Tear down the Stack
        run: docker compose down
